{% extends "AcmeAuthBundle::layout.html.twig" %}
    {% block title "Расписание занятий" %}
        {% block content %}
            <script type="text/javascript" src="{{ asset('bundles/js/schedule/dhtmlxscheduler.js') }}" media="screen" title="no title" charset="utf-8"></script>
            <script type="text/javascript" src="{{ asset('bundles/js/schedule/locale/locale_ru.js') }}" media="screen" title="no title" charset="utf-8"></script>
            <script type="text/javascript" src="{{ asset('bundles/js/schedule/dhtmlxscheduler_editors.js') }}" media="screen" title="no title" charset="utf-8"></script>
            <script type="text/javascript" src="{{ asset('bundles/js/schedule/dhtmlxcommon.js') }}" media="screen" title="no title" charset="utf-8"></script>
            <script type="text/javascript" src="{{ asset('bundles/js/schedule/dhtmlxCombo/dhtmlxcombo.js') }}" media="screen" title="no title" charset="utf-8"></script>
            <script type="text/javascript" src="{{ asset('bundles/js/schedule/dhtmlxcombo_extra.js') }}" charset="utf-8"></script>
            <script type="text/javascript" src="{{ asset('bundles/js/schedule/dhtmlx.js') }}"></script>
            {#<script type="text/javascript" src="{{ asset('bundles/js/schedule/dhtmlx.js') }}" media="screen" title="no title" charset="utf-8"></script>#}
           {# <script src="//code.jquery.com/jquery-1.10.2.js"></script>
            <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>#}
            <link rel="stylesheet" href="{{ asset('bundles/css/schedule/dhtmlxscheduler.css') }}" charset="utf-8" />
            <link rel="stylesheet" href="{{ asset('bundles/js/schedule/dhtmlxCombo/dhtmlxcombo.css') }}" charset="utf-8" />
            <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
            <link href="{{ asset('bundles/js/schedule/dhtmlx.css') }}" rel="stylesheet" type="text/css" />
            <div class="container">
                <style>
                    .dhtmlx_popup_text {
                        font-size: 13px;
                    }
                    .dhtmlx_popup_button {
                        height: 35px;
                    }
                    .dhx_scale_hour{
                        line-height:normal;
                    }
                    .dhx_combo_box.dhx_skyblue {
                        width: 590px !important;
                    }
                    #combo-checkbox {
                        width: 610px;
                    }
                    #combo-checkbox .dhx_combo_img {
                        right: 18px;
                    }
                </style>
                <div class="row">
                    <div class="btn-group" data-toggle-name="profile_options" data-toggle="buttons-radio">
                        <button type="button" value="profile" data-toggle="button" class="btn btn-primary active">Расписание занятий</button>
                        <button type="button" value="messages" data-toggle="button" class="btn btn-primary">Расписание сессии и доп. занятий</button>
                    </div>
                </div>
                <div class="row">
                    <div class="btn-group" data-toggle-name="messages_options" data-toggle="buttons-radio">
                        <button type="button" value="support" data-toggle="button" class="btn btn-primary active">По группе</button>
                        <button type="button" value="private" data-toggle="button" class="btn btn-primary active">По преподавателю</button>
                        <button type="button" value="chair" data-toggle="button" class="btn btn-primary active">По предмету</button>
                        <button type="button" value="chair" data-toggle="button" class="btn btn-primary active">По аудитории</button>
                        <input id="messages-options" type="hidden">
                    </div>
                </div>
                <div class="row">
                    <div id="scheduler_here" class="dhx_cal_container" style='width:100%; height:1200px;'>
                        <div class="dhx_cal_navline">
                            <div class="dhx_cal_prev_button">&nbsp;</div>
                            <div class="dhx_cal_next_button">&nbsp;</div>
                            <div class="dhx_cal_today_button"></div>
                            <div class="dhx_cal_date"></div>
                            <div class="dhx_cal_tab" name="day_tab" style="right:204px;"></div>
                            <div class="dhx_cal_tab" name="week_tab" style="right:140px;"></div>
                            <div class="dhx_cal_tab" name="month_tab" style="right:76px;"></div>
                        </div>
                        <div class="dhx_cal_header">
                        </div>
                        <div class="dhx_cal_data">
                        </div>
                    </div>
                </div>
            </div>
            <script>
                jQuery(function ($) {
                   /* $.fn.button.noConflict();*/
                    var step = 30, format = scheduler.date.date_to_str("%H:%i");
                    scheduler.config.xml_date="%Y-%m-%d %H:%i";
                    scheduler.config.first_hour = 8;
                    scheduler.config.last_hour = 21;
                    scheduler.config.time_step = 10;
                    scheduler.config.separate_short_events = true;
                    scheduler.config.auto_end_date = true;
                    scheduler.config.details_on_create = true;
                    scheduler.config.details_on_dblclick = true;
                    scheduler.config.hour_size_px = (60 / step) * 22;
                    scheduler.config.limit_time_select = true;
                    //scheduler.config.event_duration = 60;
                    scheduler.locale.labels.section_check_divide = "Разделить на 2 подгруппы";
                    scheduler.locale.labels.section_check_full = "Заполнить на последующие недели";
                    //scheduler.locale.labels.section_template = 'Details';
                    scheduler.locale.labels.section_subject = "Предмет";
                    scheduler.locale.labels.section_room = "Аудитория";
                    scheduler.locale.labels.section_user = "Преподаватель";
                    scheduler.locale.labels.section_type_lesson = "Тип занятия";
                    scheduler.locale.labels.section_group = "Группы";
                    scheduler.config.lightbox.sections = [
//                        {name: "description", height: 100, map_to: "text", type: "textarea", focus: true},
                        { name: "check_divide", map_to: "even", type: "checkbox", checked_value: "1", unchecked_value: "0", height: 40 },
                        { name: "check_full", map_to: "odd", type: "checkbox", checked_value: "1", unchecked_value: "0", height: 60 },
                        { name:"subject", map_to:"subject", label:"subject", type:"comboAutocomplete", id:"subject", data: "schedule/data?p=subject" },
                        { name:"room", map_to:"room", type:"comboAutocomplete", id:"room", data: "schedule/data?p=room" },
                        { name:"type_lesson", map_to:"type_lesson", type:"comboAutocomplete", id:"type_lesson", data: "schedule/data?p=type_lesson" },
                        { name:"user", map_to:"user", type:"comboAutocomplete", id:"user", data: "schedule/data?p=user" },
                        { name:"group", map_to:"group", type:"comboAutocompleteCheckbox", id:"group", data: "schedule/data?p=group" },
                        //{ name: "subject", map_to: "subject", type: "combo", script_path: "schedule/data?p=subject", height: 30, filtering: true},
                        //{ name: "room", map_to: "room", type: "combo", script_path: "schedule/data?p=room", height: 30, filtering: true},
                        //{ name: "type_lesson", map_to: "type_lesson", type: "combo", script_path: "schedule/data?p=type_lesson", height: 30, filtering: true},
                        //{ name: "user", map_to: "user", type: "combo", script_path: "schedule/data?p=user", height: 30, filtering: true},
                       // { name: "group", map_to: "gp", type: "combo", comboType: "checkbox", script_path: "schedule/data?p=group", height: 30, filtering: true},
                        { name: "time", height: 72, type: "time", map_to: "auto" }
                    ];
                    dhtmlx.image_path = "{{ asset('bundles/js/schedule/dhtmlxCombo/imgs/') }}";
                    dhtmlx.skin = "dhx_skyblue";

                    //combobox.setComboValue(value);
                    //combobox.selectOption(optionIndex);
                    /*myCombo.attachEvent("onDynXLS", myComboFilter);
                    function myComboFilter(text){
                        myCombo.clearAll();
                        dhtmlxAjax.get("schedule/data?p=subject", function(xml){
                            myCombo.setComboValue(xml.xmlDoc.responseText);
                        })
                    }*/
                    /*var z2 = new dhtmlXCombo("combo_zone3", "alfa3", 200, 'checkbox');
                    z2.addOption([[1, 1111], [2, 2222], [3, 3333], [4, 4444], [5, 5555]]);
                    z2.setChecked(1, true);
                    alert(z2.getChecked());*/

                    scheduler.form_blocks["comboAutocomplete"] = {
                        render: function(sns){
                            //console.log(sns);
                            var height=(sns.height||"23")+"px";
                            var html="<div data='"+sns.data+"' class='dhx_cal_ltext' style='height:"+height+";' id='"+scheduler.uid()+"'></div>";
                            return html;
                        },
                        set_value: function(node, value, ev) {
                            if (!node.combo) {
                                //console.log(value);
                                node.combo = new dhtmlXCombo(node.id, "combo", 590);
                                node.combo.enableFilteringMode(true);
                                node.combo.clearAll();
                                dhtmlxAjax.get(node.getAttribute("data"), function(xml){
                                    node.combo.loadXMLString(xml.xmlDoc.responseText);
                                });
                                /*node.combo = new dhtmlXCombo(node.id,"dummy","553px");
                                 node.combo.loadXML(node.getAttribute("data"),function(){
                                 node.combo.setComboValue(value||"");
                                 }); */
                                /* node.combo.load("schedule/data?p=subject", function(){
                                 node.combo.setComboValue(value||"");
                                 });*/
                                /* dhtmlxAjax.get("schedule/data?p=subject", function(xml){
                                 console.log(value);
                                 node.combo.setComboValue(value || "");
                                 });
                                 return;*/
                            }
                           /*node.combo.setComboValue(value||"");*/
                        },
                        get_value: function(node,ev){
                            return node.combo.getActualValue();
                        },
                        focus: function(node){
                            node.combo.DOMelem_input.focus();
                        }
                    };

                    scheduler.form_blocks["comboAutocompleteCheckbox"] = {
                        render: function(sns){
                            var height=(sns.height||"23")+"px";
                            return "<div data='"+sns.data+"' class='dhx_cal_ltext' id='combo-checkbox' style='height:"+height+";' id='"+scheduler.uid()+"'></div>";
                        },
                        set_value: function(node, value, ev) {
                            if (!node.combo) {
                                node.combo = new dhtmlXCombo(node.id, null, 590, "checkbox");
                                node.combo.clearAll();
                                dhtmlxAjax.get(node.getAttribute("data"), function(xml){
                                    node.combo.loadXMLString(xml.xmlDoc.responseText);
                                });
                                node.combo.enableFilteringMode(true);
                                //node.combo.enableOptionAutoHeight(1);
                            }
                        },
                        get_value: function(node,ev){
                            return node.combo.getChecked();
                        },
                        focus: function(node){
                            node.combo.DOMelem_input.focus();
                        }
                    };

                    scheduler.form_blocks["contact_view"]={
                        render:function(sns){
                            var html = '<div class="dhx_cal_ltext" style="height:100px;">';
                            /*html += '<input type="text" placeholder="Phone" size="25" class="search" id="phone">&nbsp;';
                            html += '<input type="text" placeholder="Email Address" size="32" id="email"></div>';*/
                            html += '<select multiple="multiple" id="a" /></select></div>';
                            return html;
                        },
                        set_value:function(node,value,ev){
                            /*node.childNodes[0].value=value||"";
                            $.each(node.childNodes, function(index, item) {
                                if ($(item).attr("id") == "email") {
                                    node.childNodes[index].value=ev.email||"";
                                }
                            });*/
                        },
                        get_value:function(node,ev){
                           /* $.each(node.childNodes, function(index, item) {
                                if ($(item).attr("id") == "email") {
                                    ev.email = node.childNodes[index].value;
                                }
                            });
                            return node.childNodes[0].value;*/
                        },
                        focus:function(node){
                            //var a=node.childNodes[0]; a.select(); a.focus();
                        }
                    };

                    scheduler.attachEvent("onLightbox", function(event_id) {
                        /*$(".dhx_save_btn_set").on('click', function() {
                            var subject = scheduler.formSection('subject').getValue();
                            var room = scheduler.formSection('room').getValue();
                            var typeLesson = scheduler.formSection('type_lesson').getValue();
                            var user = scheduler.formSection('user').getValue();
                            var group = scheduler.formSection('group').getValue();
                        })*/
                    });

                   /* var custom_form = document.getElementById("combo_zone");
                    scheduler.showLightbox = function(id){
                        var ev = scheduler.getEvent(id);
                        scheduler.startLightbox(id, custom_form );
                        //document.getElementById("some_input").value = ev.text;
                    }
                    function save_form() {
                        var ev = scheduler.getEvent(scheduler.getState().lightbox_id);
                            //ev.text = document.getElementById("some_input").value;
                                scheduler.endLightbox(true, custom_form);
                    }
                    function close_form(argument) {
                        scheduler.endLightbox(false, custom_form);
                    }*/

                    /*  scheduler.attachEvent("onEventCreated", function(id, e) {
                          *//*var ev = scheduler.getEvent(id);
                        ev.my_template = "<b>Holder:</b>"+ ev.holder+"<br><b>Room:</b>"+ ev.room;*//*
                        var ev = scheduler.getEvent(id);*/
                        /*$("#select-subject").select2({
                            placeholder: "Выберите предмет",
                            allowClear: true,
                            width: 300,
                            maximumSelectionSize: 2,
                            formatNoMatches: "Не найден такой предмет",
                            sortResults: sortingResults
                        }).on("select2-selecting", function(e) {
                            var selectorSubject = $("#formCreateOrder_selectorSubject");
                             hidePopover(selectorSubject);
                        });*/
                       /* ev.my_template = '<select class="js-example-basic-multiple" multiple="multiple">'+
                                '<option value="AL">Alabama</option>'+
                                '<option value="WY">Wyoming</option>'+
                                '</select>';
                    });*/

                    scheduler.templates.hour_scale = function(date){
                        var html = "";
                        for (var i = 0; i < 60 / step; i++){
                            html += "<div style='height:22px;line-height:22px;'>" + format(date) + "</div>";
                            date = scheduler.date.add(date, step, "minute");
                        }
                        return html;
                    };
                    scheduler.init('scheduler_here', null, "week");
                    //scheduler.load("schedule/data");
                    var dp = new dataProcessor("schedule/proc?p=insert");
                    dp.init(scheduler);



                    //$("#formProfile_fieldOptions").val('profile');
                    //$("#messages-options").val('profile');
                    $('div.btn-group[data-toggle-name]').eq(0).each(function () {
                        var group = $(this),
                        //form = group.parents('form').eq(0),
                                name = 'formProfile[fieldOptions]',
                        //hidden = $('input[name="' + name + '"]', form);
                                hidden = $('input[name="' + name + '"]');
                        $('button', group).each(function () {
                            var button = $(this);
                            button.on('click', function () {
                                hidden.val($(this).val());
                                group.find('.active').removeClass('active');
                                if (button.val() == hidden.val()) {
                                    button.addClass('active');
                                }
                                if (hidden.val() == 'messages') {
                                    initGridMessages();
                                    $("#block-form-profile").hide();
                                    $("#block-messages").show();
                                    $("#block-messages-sort").show();
                                } else {
                                    $("#block-form-profile").show();
                                    $("#block-messages").hide();
                                    $("#block-talk").hide();
                                    $("#block-messages-sort").hide();
                                }
                            });
                        });
                    });
                    $('div.btn-group[data-toggle-name]').eq(1).each(function () {
                        var group = $(this),
                        //form = group.parents('form').eq(0),
                                name = 'formProfile[fieldOptions]',
                        //hidden = $('input[name="' + name + '"]', form);
                                hidden = $('input[name="' + name + '"]');
                        group.find('.active').removeClass('active');
                        $('button', group).each(function () {
                            var button = $(this);
                            button.on('click', function () {
                                hidden.val($(this).val());
                                group.find('.active').removeClass('active');
                                if (button.val() == hidden.val()) {
                                    button.addClass('active');
                                }
                            });
                        });
                    });
                });
            </script>
        {% endblock %}